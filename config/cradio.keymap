/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Alphas {
            bindings = <
      &kp Q        &kp W        &kp F                 &kp P       &kp G        &kp J       &kp L                 &kp U   &td MINUS Y   &kp BKSP
      &kp A        &kp R   &hm LALT S            &hm LGUI T       &kp D        &kp H  &hm RGUI N            &hm RALT E         &kp I      &kp O
&td LC(Z) Z  &td LC(X) X  &td LC(C) C           &td LC(V) V       &kp B        &kp K       &kp M  &td UNDERSCORE COMMA  &td EXCL DOT  &kp SLASH
                                       &mt LC(LS(LALT)) SPC  &sk LSHIFT    &sk RCTRL       &to 1
            >;
        };

        Symbols {
            bindings = <
              &kp ESC             &kp AT_SIGN                    &kp POUND               &kp DLLR          &kp PRCNT    &kp CARET   &kp AMPERSAND     &kp ASTRK         &kp SEMI  &kp BACKSPACE
              &kp TAB       &kp DOUBLE_QUOTES         &kp LEFT_PARENTHESIS         &kp LEFT_BRACE   &kp LEFT_BRACKET    &kp EQUAL        &kp HOME  &kp UP_ARROW          &kp END      &kp ENTER
&td LC(Z) EXCLAMATION  &td LC(X) SINGLE_QUOTE  &td LC(C) RIGHT_PARENTHESIS  &td LC(V) RIGHT_BRACE  &kp RIGHT_BRACKET    &kp MINUS  &kp LEFT_ARROW      &kp DOWN  &kp RIGHT_ARROW  &kp BACKSLASH
                                                                                            &to 0             &trans       &trans           &to 2
            >;
        };

        Numbers {
            bindings = <
&trans       &kp E  &kp TILDE        &trans     &trans             &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans
&trans  &kp PERIOD     &trans  &kp ASTERISK   &kp PLUS             &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans
&trans   &kp COMMA     &trans     &kp SLASH  &kp MINUS    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3   &to 1
                                      &to 0     &trans             &trans            &to 3
            >;
        };

        Auxiliary {
            bindings = <
    &kp F1      &kp F2            &kp F3        &kp F4      &kp F5          &kp F6  &kp F7  &kp N8  &kp N9  &kp F10
   &kp TAB  &bt BT_NXT  &kp C_PLAY_PAUSE  &kp C_VOL_UP  &kp C_NEXT    &kp CAPSLOCK   &none   &none   &none   &trans
&bt BT_CLR  &bt BT_PRV        &kp C_MUTE  &kp C_VOL_DN  &kp C_PREV           &none   &none   &none   &none   &trans
                                                 &to 0      &trans          &trans   &none
            >;
        };
    };
};
